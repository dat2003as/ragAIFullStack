services:
  # ========== BACKEND ==========
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-chat-rag-backend
    ports:
      - "8000:8000"  # API
      - "8001:8001"  # Prometheus metrics
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  #========== FRONTEND ==========
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
      - VITE_API_URL

    container_name: ai-chat-rag-frontend
    ports:
      - "6868:80"   # Frontend served on port 6868
    env_file:
    - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  #========== PROMETHEUS ==========
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    user: "nobody"  
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-admin-api'  
      - '--web.enable-lifecycle'
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # ========== GRAFANA ==========
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    user: "472"
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}

      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
     
      - GF_SERVER_ROOT_URL=http://localhost:${GRAFANA_PORT:-3000}
      - GF_SERVER_DOMAIN=localhost

      
      
    volumes:
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app-network
    restart: unless-stopped
 

# ========== VOLUMES ==========
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# ========== NETWORKS ==========
networks:
  app-network:
    driver: bridge